{"version":3,"file":"formatMoney.js","sourceRoot":"","sources":["../src/utils/formatMoney.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,MAAuB,EACvB,WAAmB,CAAC,EACpB,WAAmB,GAAG,EACtB,eAAuB,GAAG,EAC1B,EAAE;IACF,MAAM,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;IACnD,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC3C,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC3D,MAAM,GAAG,GAAG,OAAO,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC;IACrE,MAAM,GAAG,GAAG,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC7D,MAAM,UAAU,GAAG,UAAS,CAAM,EAAE,IAAS;QAC3C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7B,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC,CAAC;IACF,IAAI,CAAW,CAAC;IAChB,wCAAwC;IACxC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjE,MAAM,EAAE,GAAG,gBAAgB,CAAC;IAC5B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACpB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;KAC5C;IACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,EAAE;QAC9B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrD;IACD,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC","sourcesContent":["/**\n * @description 格式化金额\n * @param number：要格式化的数字\n * @param decimals：保留几位小数 默认0位\n * @param decPoint：小数点符号 默认.\n * @param thousandsSep：千分位符号 默认为,\n */\nexport const formatMoney = (\n  number: number | string,\n  decimals: number = 2,\n  decPoint: string = '.',\n  thousandsSep: string = ','\n) => {\n  number = (number + '').replace(/[^0-9+-Ee.]/g, '');\n  const n = !isFinite(+number) ? 0 : +number;\n  const prec = !isFinite(+decimals) ? 0 : Math.abs(decimals);\n  const sep = typeof thousandsSep === 'undefined' ? ',' : thousandsSep;\n  const dec = typeof decPoint === 'undefined' ? '.' : decPoint;\n  const toFixedFix = function(n: any, prec: any) {\n    const k = Math.pow(10, prec);\n    return '' + Math.ceil(n * k) / k;\n  };\n  let s: string[];\n  // eslint-disable-next-line prefer-const\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  const re = /(-?\\d+)(\\d{3})/;\n  while (re.test(s[0])) {\n    s[0] = s[0].replace(re, '$1' + sep + '$2');\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n};\n"]}